testing method ```integer_validator```
_________________________________________

This method checks if value is an integer
and is greater than 0
-----------------------------------------

Import the module:
       >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Testing positive value:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("width", 89)
	>>> bg.integer_validator("my_int", 12)

Testing negative numbers and zero:
	>>> bg.integer_validator("my_int", -12)
	Traceback (most recent call last):
	...
	ValueError: <name> must be greater than 0
	>>> bg.integer_validator("my_int", -89)
	Traceback (most recent call last):
	...
	ValueError: <name> must be greater than 0
	>>> bg.integer_validator("my_int", 0)
	Traceback (most recent call last):
	...
	ValueError: <name> must be greater than 0

Testing non-integer:
	>>> bg.integer_validator("my_int", "12")
	Traceback (most recent call last):
	...
	TypeError: <name> must be an integer
	>>> bg.integer_validator("my_int", [65, 97, 110, 105])
	Traceback (most recent call last):
	...
	TypeError: <name> must be an integer
	>>> bg.integer_validator("my_int", { 'You': 1, 'Me': 0, 'Us': 10})
	Traceback (most recent call last):
	...
	TypeError: <name> must be an integer

Testing just one argument:
	>>> bg.integer_validator("my_int")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Testing More than two arguments:
	>>> bg.integer_validator("my_int", 22, 23)
	Traceback (most recent call last):
	...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

Testing No arguments passed:
	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
